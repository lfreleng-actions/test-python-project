---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Runs on a new pull request, performs build and runs tests
name: "Python Project"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, edited, synchronize]
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  python-build:
    name: "Build"
    runs-on: ubuntu-24.04
    outputs:
      matrix_json: ${{ steps.python-build.outputs.matrix_json }}
      artefact_name: ${{ steps.python-build.outputs.artefact_name }}
      artefact_path: ${{ steps.python-build.outputs.artefact_path }}
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    timeout-minutes: 10 # Increase this timeout value as needed
    steps:
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Build Python project [tox]"
        id: python-tox-build
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-build-action@48381cece78a990a6ba93bd5924bcd40bf0d1a7d # v0.1.20
        with:
          tag: "v1.0.0dev1"
          tox_build: 'true'
          artefact_upload: 'false'

      - name: "Build Python project [python -m build]"
        id: python-build
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-build-action@48381cece78a990a6ba93bd5924bcd40bf0d1a7d # v0.1.20
        with:
          tag: "v1.0.0dev1"
          purge_artefact_path: 'true'
          artefact_upload: 'true'

  python-tests:
    name: "Run Tests"
    runs-on: "ubuntu-24.04"
    needs:
      - python-build
    # Matrix job
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.python-build.outputs.matrix_json) }}
    permissions:
      contents: read
    timeout-minutes: 10 # Increase this timeout value as needed
    steps:
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Python tests [pytest] ${{ matrix.python-version }}"
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-test-action@b997656111c9b547f8458b18baf6be139e2d2c6c # v0.1.12
        with:
          python_version: ${{ matrix.python-version }}
          report_artefact: true

      - name: "Python test [tox -e tests] ${{ matrix.python-version }}"
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-test-action@b997656111c9b547f8458b18baf6be139e2d2c6c # v0.1.12
        with:
          python_version: ${{ matrix.python-version }}
          tox_tests: true
          tox_envs: "tests"
          # Errors occur if this is requested more than once
          report_artefact: false

  python-audit:
    name: "Audit Dependencies"
    runs-on: "ubuntu-24.04"
    needs:
      - python-build
    # Matrix job
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.python-build.outputs.matrix_json) }}
    permissions:
      contents: read
    timeout-minutes: 10 # Increase this timeout value as needed
    steps:
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Audit dependencies ${{ matrix.python-version }}"
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-audit-action@bab5316468c108870eb759ef0de622bae9239aad # v0.2.2
        with:
          python_version: ${{ matrix.python-version }}
